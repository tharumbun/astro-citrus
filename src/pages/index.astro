---
import { type CollectionEntry, getCollection } from "astro:content";
import SocialList from "@/components/SocialList.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import Note from "@/components/note/Note.astro";
import { getAllPosts } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";

// Fetch WordPress Posts
const response = await fetch('https://thepenhreview.com/wp-json/wp/v2/posts');
const wordpressPosts = await response.json(); // Store WordPress posts

// Local Posts
const MAX_POSTS = 10;
const allPosts = await getAllPosts();
const allPostsByDate = allPosts
	.sort(collectionDateSort)
	.slice(0, MAX_POSTS) as CollectionEntry<"post">[];

// Notes
const MAX_NOTES = 2;
const allNotes = await getCollection("note");
const latestNotes = allNotes.sort(collectionDateSort).slice(0, MAX_NOTES);
---
```

### **Displaying WordPress Posts**
You can now use `wordpressPosts` inside the Astro template to display the posts:

```astro
<!-- WordPress Posts Section -->
<section aria-label="WordPress blog post list">
	<h2 class="title mb-6 text-xl text-accent-two">
		WordPress Posts
	</h2>
	<ul class="space-y-4 md:space-y-2" role="list">
		{
			wordpressPosts.map((post) => (
				<li class="gap-2 sm:grid-cols-[auto_1fr]">
					<a href={post.link} class="text-lg font-semibold hover:underline">{post.title.rendered}</a>
				</li>
			))
		}
	</ul>
</section>
```

This will fetch posts from your WordPress site and display their titles as links.

Would you like to format the posts differently or add more details like excerpts or images?
